{"version":3,"sources":["Note.js","UserNotes.js","App.js","index.js"],"names":["Note","props","state","editing","position","this","style","left","xPos","randomBetween","window","innerWidth","top","yPos","innerHeight","updatePosition","nextProps","e","index","dataTransfer","setData","min","max","Math","ceil","random","setState","onChange","newText","value","onRemove","content","save","draggable","onDragStart","onDoubleClick","edit","className","onClick","remove","children","renderNoteBody","ref","defaultValue","renderForm","renderDisplay","Component","UserNotes","notes","JSON","parse","localStorage","getItem","map","single","add","note","setItem","stringify","uniqueId","text","push","id","nextId","saveToStorage","i","splice","key","update","bind","onDrag","preventDefault","noteId","getData","clientX","clientY","onDragOver","onDrop","renderNotes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcccc69b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst saveText = \"SAVE\";\r\nconst removeToolTipText = \"Remove note\";\r\n\r\nclass Note extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    updatePosition({ position }) {\r\n        this.style = {\r\n            left: (position ? position.xPos : this.randomBetween(0, window.innerWidth - 280) + \"px\"),\r\n            top: (position ? position.yPos : this.randomBetween(0, window.innerHeight - 280) + \"px\")\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.updatePosition(this.props);\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        this.updatePosition(nextProps);\r\n    }\r\n\r\n    onDragStart(e) {\r\n        const { index } = this.props;\r\n        e.dataTransfer.setData(\"application/x-note\", index);\r\n    }\r\n\r\n    // Get random position\r\n    randomBetween(min, max) {\r\n        return (min + Math.ceil(Math.random() * max));\r\n    }\r\n\r\n    edit() {\r\n        this.setState({ editing: true });\r\n    }\r\n\r\n    save() {\r\n        const { index } = this.props;\r\n        this.props.onChange(this.newText.value, index);\r\n        this.setState({ editing: false });\r\n    }\r\n\r\n    // Remove note\r\n    remove() {\r\n        const { index } = this.props;\r\n        this.props.onRemove(index);\r\n    }\r\n\r\n    // Render note body\r\n    renderNoteBody(content, save) {\r\n        return (\r\n            <div draggable=\"true\" onDragStart={(e) => this.onDragStart(e)} onDoubleClick={() => this.edit()} className=\"note\" style={this.style}>\r\n                <article>\r\n                    <header className=\"note__header\">\r\n                        <div className=\"wrapper-tooltip\">\r\n                            <span onClick={() => this.remove()} className=\"close hairline\"></span>\r\n                            <div className=\"tooltip\">{removeToolTipText}</div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"note__content\">{content}</div>\r\n                    <footer className=\"note__footer\">\r\n                        <div className=\"note__fold\"></div>\r\n                        {save ? <div className=\"note__save\" onClick={() => this.save()}>{saveText}</div> : \"\"}\r\n                    </footer>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Render note preview\r\n    renderDisplay() {\r\n        const { children } = this.props;\r\n        return this.renderNoteBody(children);\r\n    }\r\n\r\n    // Render note edit mode\r\n    renderForm() {\r\n        const { children } = this.props;\r\n        const content = (\r\n            <div>\r\n                <textarea ref={ref => this.newText = ref} defaultValue={children} className=\"note__textarea\"></textarea>\r\n            </div>\r\n        );\r\n        return this.renderNoteBody(content, true);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { editing } = this.state;\r\n        return (editing ? this.renderForm() : this.renderDisplay());\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default Note;","import React, { Component } from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst newNoteText = \"New note\";\r\nconst newNoteButtonText = \"ADD NEW\";\r\n\r\nclass UserNotes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notes: []\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Get notes from local storage\r\n        const notes = JSON.parse(localStorage.getItem(\"notesStorage\")) || [];\r\n        notes.map((single) => {\r\n            return this.add(single.note, single.position);\r\n        });\r\n    }\r\n\r\n    // Save to localStorage\r\n    saveToStorage(notes) {\r\n        this.setState({ notes });\r\n        localStorage.setItem(\"notesStorage\", JSON.stringify(notes));\r\n    }\r\n\r\n    // Get next ID\r\n    nextId() {\r\n        this.uniqueId = this.uniqueId || 0;\r\n        return this.uniqueId++;\r\n    }\r\n\r\n    // Add note to localStorage and state\r\n    add(text, position) {\r\n        const { notes } = this.state;\r\n        notes.push({\r\n            id: this.nextId(this),\r\n            note: text,\r\n            position\r\n        });\r\n\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note text\r\n    update(newText, i) {\r\n        const { notes } = this.state;\r\n        notes[i].note = newText;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note position\r\n    updatePosition(position, i) {\r\n        const { notes } = this.state;\r\n        notes[i].position = position;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Remove note\r\n    remove(i) {\r\n        const { notes } = this.state;\r\n        notes.splice(i, 1);\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Render Notes\r\n    renderNotes(note, i) {\r\n        return (\r\n            <Note key={note.id}\r\n                index={i}\r\n                position={note.position}\r\n                onChange={this.update.bind(this)}\r\n                onDrag={this.updatePosition.bind(this)}\r\n                onRemove={this.remove.bind(this)} >\r\n                {note.note}\r\n            </Note>\r\n        );\r\n    }\r\n\r\n    onDragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDrop(e) {\r\n        let noteId = e.dataTransfer.getData(\"application/x-note\");\r\n        let position = { xPos: e.clientX, yPos: e.clientY };\r\n        this.updatePosition(position, noteId);\r\n    }\r\n\r\n    render() {\r\n        const { notes } = this.state;\r\n        return (\r\n            <div className=\"UserNotes\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e)}>\r\n                <header className=\"main-header\">\r\n                    <div className=\"main-header__text fadein\" onClick={this.add.bind(this, newNoteText, false)}>\r\n                        {newNoteButtonText}\r\n                    </div>\r\n                </header>\r\n                {notes.map(this.renderNotes.bind(this))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default UserNotes;","import React, { Component } from \"react\";\nimport UserNotes from \"./UserNotes\";\nimport \"./style.css\"\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"appRoot\">\n        <UserNotes />\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}