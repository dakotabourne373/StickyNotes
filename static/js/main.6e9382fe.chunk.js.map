{"version":3,"sources":["components/Note.js","components/UserNotes.js","App.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","index.js"],"names":["Note","props","onDragStart","e","index","dataTransfer","setData","randomBetween","min","max","Math","ceil","random","edit","setState","editing","save","onChange","newText","value","remove","onRemove","renderNoteBody","content","draggable","onDoubleClick","className","style","onClick","renderDisplay","children","renderForm","ref","defaultValue","state","position","this","left","xPos","window","innerWidth","top","yPos","innerHeight","updatePosition","nextProps","Component","UserNotes","notes","JSON","parse","localStorage","getItem","map","single","add","note","setItem","stringify","uniqueId","text","push","id","nextId","saveToStorage","i","splice","key","update","bind","onDrag","preventDefault","noteId","getData","clientX","clientY","onDragOver","onDrop","renderNotes","require","config","App","FirebaseContext","React","createContext","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.6e9382fe.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst saveText = \"SAVE\";\r\nconst removeToolTipText = \"Remove note\";\r\n\r\nclass Note extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    updatePosition({ position }) {\r\n        this.style = {\r\n            left: (position ? position.xPos : this.randomBetween(0, window.innerWidth - 280) + \"px\"),\r\n            top: (position ? position.yPos : this.randomBetween(0, window.innerHeight - 280) + \"px\")\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.updatePosition(this.props);\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        this.updatePosition(nextProps);\r\n    }\r\n\r\n    onDragStart = (e) => {\r\n        const { index } = this.props;\r\n        e.dataTransfer.setData(\"application/x-note\", index);\r\n    }\r\n\r\n    // Get random position\r\n    randomBetween = (min, max) => {\r\n        return (min + Math.ceil(Math.random() * max));\r\n    }\r\n\r\n    edit = () => {\r\n        this.setState({ editing: true });\r\n    }\r\n\r\n    save = () => {\r\n        const { index } = this.props;\r\n        this.props.onChange(this.newText.value, index);\r\n        this.setState({ editing: false });\r\n    }\r\n\r\n    // Remove note\r\n    remove = () => {\r\n        const { index } = this.props;\r\n        this.props.onRemove(index);\r\n    }\r\n\r\n    // Render note body\r\n    renderNoteBody = (content, save) => {\r\n        return (\r\n            <div draggable=\"true\" onDragStart={(e) => this.onDragStart(e)} onDoubleClick={() => this.edit()} className=\"note\" style={this.style}>\r\n                <article>\r\n                    <header className=\"note__header\">\r\n                        <div className=\"wrapper-tooltip\">\r\n                            <span onClick={() => this.remove()} className=\"close hairline\"></span>\r\n                            <div className=\"tooltip\">{removeToolTipText}</div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"note__content\">{content}</div>\r\n                    <footer className=\"note__footer\">\r\n                        <div className=\"note__fold\"></div>\r\n                        {save ? <div className=\"note__save\" onClick={() => this.save()}>{saveText}</div> : \"\"}\r\n                    </footer>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Render note preview\r\n    renderDisplay = () => {\r\n        const { children } = this.props;\r\n        return this.renderNoteBody(children);\r\n    }\r\n\r\n    // Render note edit mode\r\n    renderForm = () => {\r\n        const { children } = this.props;\r\n        const content = (\r\n            <div>\r\n                <textarea ref={ref => this.newText = ref} defaultValue={children} className=\"note__textarea\"></textarea>\r\n            </div>\r\n        );\r\n        return this.renderNoteBody(content, true);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { editing } = this.state;\r\n        return (editing ? this.renderForm() : this.renderDisplay());\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default Note;","import React, { Component } from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst newNoteText = \"New note\";\r\nconst newNoteButtonText = \"ADD NEW\";\r\n\r\nclass UserNotes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notes: []\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Get notes from local storage\r\n        const notes = JSON.parse(localStorage.getItem(\"notesStorage\")) || [];\r\n        notes.map((single) => {\r\n            return this.add(single.note, single.position);\r\n        });\r\n    }\r\n\r\n    // Save to localStorage\r\n    saveToStorage(notes) {\r\n        this.setState({ notes });\r\n        localStorage.setItem(\"notesStorage\", JSON.stringify(notes));\r\n    }\r\n\r\n    // Get next ID\r\n    nextId() {\r\n        this.uniqueId = this.uniqueId || 0;\r\n        return this.uniqueId++;\r\n    }\r\n\r\n    // Add note to localStorage and state\r\n    add(text, position) {\r\n        const { notes } = this.state;\r\n        notes.push({\r\n            id: this.nextId(this),\r\n            note: text,\r\n            position\r\n        });\r\n\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note text\r\n    update(newText, i) {\r\n        const { notes } = this.state;\r\n        notes[i].note = newText;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note position\r\n    updatePosition(position, i) {\r\n        const { notes } = this.state;\r\n        notes[i].position = position;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Remove note\r\n    remove(i) {\r\n        const { notes } = this.state;\r\n        notes.splice(i, 1);\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Render Notes\r\n    renderNotes(note, i) {\r\n        return (\r\n            <Note key={note.id}\r\n                index={i}\r\n                position={note.position}\r\n                onChange={this.update.bind(this)}\r\n                onDrag={this.updatePosition.bind(this)}\r\n                onRemove={this.remove.bind(this)} >\r\n                {note.note}\r\n            </Note>\r\n        );\r\n    }\r\n\r\n    onDragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDrop(e) {\r\n        let noteId = e.dataTransfer.getData(\"application/x-note\");\r\n        let position = { xPos: e.clientX, yPos: e.clientY };\r\n        this.updatePosition(position, noteId);\r\n    }\r\n\r\n    render() {\r\n        const { notes } = this.state;\r\n        return (\r\n            <div className=\"UserNotes\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e)}>\r\n                <header className=\"main-header\">\r\n                    <div className=\"main-header__text fadein\" onClick={this.add.bind(this, newNoteText, false)}>\r\n                        {newNoteButtonText}\r\n                    </div>\r\n                </header>\r\n                {notes.map(this.renderNotes.bind(this))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default UserNotes;","import React, { Component } from \"react\";\r\nimport UserNotes from \"./components/UserNotes\";\r\nimport \"./style.css\"\r\nrequire('dotenv').config()\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"appRoot\">\r\n        <UserNotes />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\n\r\nexport default class Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n\r\n        this.auth = app.auth();\r\n    }\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n    doPasswordUpdate = password =>\r\n        this.auth.currentUser.updatePassword(password);\r\n}","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n        <App />\r\n    </FirebaseContext.Provider>,\r\n    document.getElementById(\"root\"));"],"sourceRoot":""}